# ===================================================================
# Redis/Upstash Configuration (Required for <5s load times)
# ===================================================================
# Get your free Redis instance at: https://upstash.com/
# 1. Create account at upstash.com
# 2. Create a Redis database
# 3. Copy the REST URL and REST TOKEN from the database details
# Note: Works without Redis (falls back to memory cache), but performance
#       will be degraded in serverless environments

UPSTASH_REDIS_REST_URL=https://your-instance.upstash.io
UPSTASH_REDIS_REST_TOKEN=your-token-here

# ===================================================================
# Snowflake Configuration (Optional - if using cloud data warehouse)
# ===================================================================
SNOWFLAKE_ACCOUNT=HEWZYWQ-LXC32669
SNOWFLAKE_USER=LESGREYS
SNOWFLAKE_AUTHENTICATOR=externalbrowser
SNOWFLAKE_WAREHOUSE=COMPUTE_WH
SNOWFLAKE_DATABASE=DOORLOOP_ASSIGNEMENT
SNOWFLAKE_SCHEMA=PUBLIC
SNOWFLAKE_ROLE=ACCOUNTADMIN

# ===================================================================
# Data Source Configuration
# ===================================================================
# Use local CSV files (recommended for development)
USE_LOCAL_DATA=true
DATA_PATH=./data/raw/

# Optional: Fallback to GitHub-hosted data files
# DATA_URL=https://raw.githubusercontent.com/your-repo/data/

# ===================================================================
# Model Configuration
# ===================================================================
# Use simple churn model (recommended for serverless - no sklearn)
USE_SIMPLE_CHURN=true

# ===================================================================
# Dashboard Configuration
# ===================================================================
DASH_DEBUG=true
DASH_PORT=8050

# ===================================================================
# Deployment Configuration
# ===================================================================
# Set to true when deploying to Vercel (disables disk caching)
# VERCEL=true
