{
  "_schema_version": "1.0",
  "_description": "Centralized metadata registry for all dashboard components. Maps component IDs to their source code, SQL queries, and documentation.",
  "executive_overview": {
    "kpi_total_arr": {
      "type": "kpi",
      "title": "Total ARR Calculation",
      "tooltip": "Total Annual Recurring Revenue across all active accounts",
      "formula_description": "Sum of all annual recurring revenue values across active users",
      "source_file": "src/utils/load_data.py",
      "source_function": "get_summary_stats",
      "source_lines": "104-109",
      "sql_file": null,
      "calculation_summary": "SUM(annual_revenue)"
    },
    "kpi_active_users": {
      "type": "kpi",
      "title": "Active Users Calculation",
      "tooltip": "Number of users with activity in the last 90 days",
      "formula_description": "Count of users where is_active flag is 1",
      "source_file": "src/utils/load_data.py",
      "source_function": "get_summary_stats",
      "source_lines": "104-107",
      "sql_file": null,
      "calculation_summary": "COUNT(users WHERE is_active = 1)"
    },
    "kpi_churn_rate": {
      "type": "kpi",
      "title": "Churn Rate Calculation",
      "tooltip": "Percentage of users with no activity in the last 90 days",
      "formula_description": "Inactive users divided by total users, multiplied by 100",
      "source_file": "src/layouts/executive_overview.py",
      "source_function": "create_executive_overview",
      "source_lines": "53-54",
      "sql_file": null,
      "calculation_summary": "(inactive_users / total_users) \u00d7 100"
    },
    "kpi_avg_nps": {
      "type": "kpi",
      "title": "Average NPS Calculation",
      "tooltip": "Average Net Promoter Score across all customers (-100 to +100)",
      "formula_description": "Mean of all NPS scores",
      "source_file": "src/utils/load_data.py",
      "source_function": "get_summary_stats",
      "source_lines": "110",
      "sql_file": null,
      "calculation_summary": "AVG(nps_score)"
    },
    "chart_health_distribution": {
      "type": "chart",
      "chart_type": "pie",
      "title": "Customer Health Distribution",
      "tooltip": "Distribution of customers by health score tier (Red: <60, Yellow: 60-80, Green: >80)",
      "formula_description": "Grouping of customers into health tiers based on composite health scores",
      "source_file": "src/utils/data_processor.py",
      "source_function": "calculate_health_scores",
      "source_lines": "253-258",
      "sql_file": "sql/metrics/health_score.sql",
      "sql_lines": "1-174",
      "calculation_summary": "health_tier = CASE WHEN health_score < 60 THEN 'Red' WHEN health_score < 80 THEN 'Yellow' ELSE 'Green' END"
    },
    "chart_churn_risk_distribution": {
      "type": "chart",
      "chart_type": "pie",
      "title": "Churn Risk Distribution",
      "tooltip": "Distribution of customers by churn risk level (Low, Medium, High)",
      "formula_description": "Risk categorization based on health score and renewal timing",
      "source_file": "src/utils/data_processor.py",
      "source_function": "calculate_health_scores",
      "source_lines": "261-264",
      "sql_file": null,
      "calculation_summary": "churn_risk = CASE WHEN health_score < 60 OR days_to_renewal < 30 THEN 'High' ..."
    },
    "chart_users_by_plan": {
      "type": "chart",
      "chart_type": "bar",
      "title": "Users by Plan Type",
      "tooltip": "Number of customers on each subscription plan tier",
      "formula_description": "Count of users grouped by plan type",
      "source_file": "src/layouts/executive_overview.py",
      "source_function": "create_executive_overview",
      "source_lines": "160-170",
      "sql_file": null,
      "calculation_summary": "COUNT(*) GROUP BY plan_type"
    },
    "chart_arr_by_plan": {
      "type": "chart",
      "chart_type": "bar",
      "title": "ARR by Plan Type",
      "tooltip": "Total Annual Recurring Revenue broken down by subscription plan",
      "formula_description": "Sum of annual revenue grouped by plan type",
      "source_file": "src/layouts/executive_overview.py",
      "source_function": "create_executive_overview",
      "source_lines": "172-182",
      "sql_file": null,
      "calculation_summary": "SUM(annual_revenue) GROUP BY plan_type"
    },
    "chart_nps_distribution": {
      "type": "chart",
      "chart_type": "histogram",
      "title": "NPS Score Distribution",
      "tooltip": "Histogram showing the distribution of NPS scores across all customers",
      "formula_description": "Frequency distribution of NPS scores in 20 bins",
      "source_file": "src/layouts/executive_overview.py",
      "source_function": "create_executive_overview",
      "source_lines": "184-197",
      "sql_file": null,
      "calculation_summary": "HISTOGRAM(nps_score, bins=20)"
    },
    "table_at_risk": {
      "type": "table",
      "title": "At-Risk Accounts Calculation",
      "tooltip": "Top 10 highest-value accounts at risk of churn (renewal < 90 days AND health score < 60)",
      "formula_description": "Accounts with both low health scores and approaching renewal dates",
      "source_file": "src/utils/data_processor.py",
      "source_function": "calculate_health_scores",
      "source_lines": "261-264",
      "sql_file": null,
      "calculation_summary": "WHERE days_to_renewal <= 90 AND health_score < 60 ORDER BY annual_revenue DESC LIMIT 10"
    }
  },
  "health_risk": {
    "kpi_red_health": {
      "type": "kpi",
      "title": "Red Health Accounts",
      "tooltip": "Number of accounts with health score below 60",
      "formula_description": "Count of users in Red health tier",
      "source_file": "src/layouts/health_risk.py",
      "source_function": "create_health_risk_monitor",
      "source_lines": null,
      "sql_file": null,
      "calculation_summary": "COUNT(users WHERE health_tier = 'Red')"
    },
    "kpi_renewal_risk": {
      "type": "kpi",
      "title": "At Renewal Risk",
      "tooltip": "Accounts approaching renewal with poor health",
      "formula_description": "Count of users with renewal within 90 days and health score below 60",
      "source_file": "src/utils/data_processor.py",
      "source_function": "calculate_health_scores",
      "source_lines": "261-264",
      "sql_file": null,
      "calculation_summary": "COUNT(users WHERE days_to_renewal <= 90 AND health_score < 60)"
    },
    "kpi_nps_detractors": {
      "type": "kpi",
      "title": "NPS Detractors",
      "tooltip": "Customers with negative NPS scores",
      "formula_description": "Count of users with NPS score less than 0",
      "source_file": "src/layouts/health_risk.py",
      "source_function": "create_health_risk_monitor",
      "source_lines": null,
      "sql_file": null,
      "calculation_summary": "COUNT(users WHERE nps_score < 0)"
    },
    "kpi_avg_health": {
      "type": "kpi",
      "title": "Average Health Score",
      "tooltip": "Mean health score across all customers",
      "formula_description": "Average of all customer health scores",
      "source_file": "src/layouts/health_risk.py",
      "source_function": "create_health_risk_monitor",
      "source_lines": null,
      "sql_file": null,
      "calculation_summary": "AVG(health_score)"
    },
    "chart_health_score_distribution": {
      "type": "chart",
      "chart_type": "histogram",
      "title": "Health Score Distribution by Tier",
      "tooltip": "Histogram of health scores colored by tier (Red/Yellow/Green)",
      "formula_description": "Distribution of health scores grouped and colored by tier",
      "source_file": "src/layouts/health_risk.py",
      "source_function": "create_health_risk_monitor",
      "source_lines": "18-34",
      "sql_file": "sql/metrics/health_score.sql",
      "sql_lines": "1-174",
      "calculation_summary": "HISTOGRAM(health_score) GROUP BY health_tier"
    },
    "chart_health_components": {
      "type": "chart",
      "chart_type": "bar_horizontal",
      "title": "Average Health Component Scores",
      "tooltip": "Mean scores for the 4 health components (Usage 40%, Business 30%, Sentiment 20%, Engagement 10%)",
      "formula_description": "Average of each weighted health component across all users",
      "source_file": "src/layouts/health_risk.py",
      "source_function": "create_health_risk_monitor",
      "source_lines": "36-50",
      "sql_file": "sql/metrics/health_score.sql",
      "sql_lines": "9-86",
      "calculation_summary": "AVG(usage_component), AVG(business_value_component), AVG(sentiment_component), AVG(engagement_component)"
    },
    "chart_renewal_pipeline": {
      "type": "chart",
      "chart_type": "bar_grouped",
      "title": "Renewal Pipeline by Health Status",
      "tooltip": "Accounts in renewal windows (0-30, 31-60, 61-90 days) grouped by health tier",
      "formula_description": "Count of accounts in each renewal period, segmented by health status",
      "source_file": "src/layouts/health_risk.py",
      "source_function": "create_health_risk_monitor",
      "source_lines": "52-76",
      "sql_file": null,
      "calculation_summary": "COUNT(*) WHERE days_to_renewal IN [0-30, 31-60, 61-90] GROUP BY health_tier"
    },
    "chart_support_vs_health": {
      "type": "chart",
      "chart_type": "scatter",
      "title": "Support Tickets vs Health Score",
      "tooltip": "Scatter plot showing relationship between support ticket volume and health scores",
      "formula_description": "Correlation analysis between support tickets (last 90 days) and customer health",
      "source_file": "src/layouts/health_risk.py",
      "source_function": "create_health_risk_monitor",
      "source_lines": "78-95",
      "sql_file": null,
      "calculation_summary": "X: support_tickets_last_90d, Y: health_score, Size: annual_revenue, Color: health_tier"
    },
    "table_red_accounts": {
      "type": "table",
      "title": "Red Health Accounts",
      "tooltip": "Top 20 red-tier accounts sorted by revenue",
      "formula_description": "Accounts with health score below 60, prioritized by ARR",
      "source_file": "src/layouts/health_risk.py",
      "source_function": "create_health_risk_monitor",
      "source_lines": "97-115",
      "sql_file": null,
      "calculation_summary": "WHERE health_tier = 'Red' ORDER BY annual_revenue DESC LIMIT 20"
    },
    "table_nps_detractors": {
      "type": "table",
      "title": "Top NPS Detractors",
      "tooltip": "Customers with negative NPS scores",
      "formula_description": "Users with NPS below 0, sorted by revenue",
      "source_file": "src/layouts/health_risk.py",
      "source_function": "create_health_risk_monitor",
      "source_lines": "117-125",
      "sql_file": null,
      "calculation_summary": "WHERE nps_score < 0 ORDER BY annual_revenue DESC"
    }
  },
  "adoption_engagement": {
    "kpi_users_adopted_features": {
      "type": "kpi",
      "title": "Users Adopted Features",
      "tooltip": "Number of users who have adopted at least one feature",
      "formula_description": "Count of users with unique_features > 0",
      "source_file": "src/layouts/adoption_engagement.py",
      "source_function": "create_adoption_engagement",
      "source_lines": "115",
      "sql_file": null,
      "calculation_summary": "COUNT(users WHERE unique_features > 0)"
    },
    "kpi_avg_logins": {
      "type": "kpi",
      "title": "Average Logins (30 days)",
      "tooltip": "Mean number of logins per user in the last 30 days",
      "formula_description": "Average of logins_30d across all users",
      "source_file": "src/layouts/adoption_engagement.py",
      "source_function": "create_adoption_engagement",
      "source_lines": "119",
      "sql_file": null,
      "calculation_summary": "AVG(logins_30d)"
    },
    "kpi_avg_session_length": {
      "type": "kpi",
      "title": "Average Session Length",
      "tooltip": "Mean session duration in minutes for the last 30 days",
      "formula_description": "Average of avg_session_30d across all users",
      "source_file": "src/layouts/adoption_engagement.py",
      "source_function": "create_adoption_engagement",
      "source_lines": "123",
      "sql_file": null,
      "calculation_summary": "AVG(avg_session_30d)"
    },
    "kpi_training_attendees": {
      "type": "kpi",
      "title": "Training Attendees",
      "tooltip": "Number of users who have attended at least one training session",
      "formula_description": "Count of users with trainings_attended > 0",
      "source_file": "src/layouts/adoption_engagement.py",
      "source_function": "create_adoption_engagement",
      "source_lines": "127",
      "sql_file": null,
      "calculation_summary": "COUNT(users WHERE trainings_attended > 0)"
    },
    "chart_adoption_funnel": {
      "type": "chart",
      "chart_type": "funnel",
      "title": "Core Feature Adoption Funnel",
      "tooltip": "User progression through key product features from login to payment",
      "formula_description": "Sequential funnel showing user counts at each adoption stage",
      "source_file": "src/layouts/adoption_engagement.py",
      "source_function": "create_adoption_engagement",
      "source_lines": "19-33",
      "sql_file": null,
      "calculation_summary": "Logged In \u2192 Added Property \u2192 Added Tenant \u2192 Signed Lease \u2192 Received Payment"
    },
    "chart_engagement_recency": {
      "type": "chart",
      "chart_type": "bar",
      "title": "User Engagement by Recency",
      "tooltip": "Number of users active in the last 7, 30, and 90 days",
      "formula_description": "User counts grouped by activity recency windows",
      "source_file": "src/layouts/adoption_engagement.py",
      "source_function": "create_adoption_engagement",
      "source_lines": "36-48",
      "sql_file": null,
      "calculation_summary": "COUNT(users WHERE days_since_last_activity <= [7, 30, 90])"
    },
    "chart_top_features": {
      "type": "chart",
      "chart_type": "bar_horizontal",
      "title": "Top 10 Adopted Features",
      "tooltip": "Most frequently adopted features across all users",
      "formula_description": "Feature adoption event counts, ranked by frequency",
      "source_file": "src/layouts/adoption_engagement.py",
      "source_function": "create_adoption_engagement",
      "source_lines": "51-58",
      "sql_file": null,
      "calculation_summary": "COUNT(*) FROM events WHERE event_type = 'feature_adopted' GROUP BY event_value_txt LIMIT 10"
    },
    "chart_session_distribution": {
      "type": "chart",
      "chart_type": "histogram",
      "title": "Average Session Length Distribution",
      "tooltip": "Distribution of user session lengths over the last 30 days",
      "formula_description": "Histogram showing frequency of different session durations",
      "source_file": "src/layouts/adoption_engagement.py",
      "source_function": "create_adoption_engagement",
      "source_lines": "64-77",
      "sql_file": null,
      "calculation_summary": "HISTOGRAM(avg_session_30d, bins=30)"
    },
    "chart_training_distribution": {
      "type": "chart",
      "chart_type": "histogram",
      "title": "Training Completion Distribution",
      "tooltip": "Distribution of training sessions attended by users",
      "formula_description": "Histogram of training attendance counts",
      "source_file": "src/layouts/adoption_engagement.py",
      "source_function": "create_adoption_engagement",
      "source_lines": "80-94",
      "sql_file": null,
      "calculation_summary": "HISTOGRAM(trainings_attended)"
    },
    "chart_report_types": {
      "type": "chart",
      "chart_type": "pie",
      "title": "Report Types Generated",
      "tooltip": "Breakdown of report types generated by users",
      "formula_description": "Distribution of report generation events by report type",
      "source_file": "src/layouts/adoption_engagement.py",
      "source_function": "create_adoption_engagement",
      "source_lines": "97-106",
      "sql_file": null,
      "calculation_summary": "COUNT(*) FROM events WHERE event_type = 'report_generated' GROUP BY event_value_txt"
    }
  },
  "retention_analysis": {
    "kpi_overall_churn_rate": {
      "type": "kpi",
      "title": "Overall Churn Rate",
      "tooltip": "Percentage of users who have become inactive",
      "formula_description": "Ratio of inactive users to total users, expressed as percentage",
      "source_file": "src/layouts/retention_analysis.py",
      "source_function": "create_retention_analysis",
      "source_lines": "126-127",
      "sql_file": null,
      "calculation_summary": "(COUNT(users WHERE is_active = 0) / COUNT(*)) \u00d7 100"
    },
    "kpi_high_churn_risk": {
      "type": "kpi",
      "title": "High Churn Risk Accounts",
      "tooltip": "Number of accounts flagged as high churn risk",
      "formula_description": "Count of users in the High churn risk tier",
      "source_file": "src/layouts/retention_analysis.py",
      "source_function": "create_retention_analysis",
      "source_lines": "130-131",
      "sql_file": null,
      "calculation_summary": "COUNT(users WHERE churn_risk_tier = 'High')"
    },
    "kpi_avg_account_age": {
      "type": "kpi",
      "title": "Average Account Age",
      "tooltip": "Mean number of days since account creation",
      "formula_description": "Average of account_age_days across all users",
      "source_file": "src/layouts/retention_analysis.py",
      "source_function": "create_retention_analysis",
      "source_lines": "134-135",
      "sql_file": null,
      "calculation_summary": "AVG(account_age_days)"
    },
    "kpi_retained_users": {
      "type": "kpi",
      "title": "Retained Users",
      "tooltip": "Number of users who remain active",
      "formula_description": "Count of users with active status",
      "source_file": "src/layouts/retention_analysis.py",
      "source_function": "create_retention_analysis",
      "source_lines": "138-139",
      "sql_file": null,
      "calculation_summary": "COUNT(users WHERE is_active = 1)"
    },
    "chart_cohort_retention": {
      "type": "chart",
      "chart_type": "heatmap",
      "title": "Cohort Retention Heatmap (Last 12 Cohorts)",
      "tooltip": "Retention rates by signup cohort and months since signup",
      "formula_description": "Heatmap showing retention percentage for each cohort over time",
      "source_file": "src/layouts/retention_analysis.py",
      "source_function": "create_retention_analysis",
      "source_lines": "30-44",
      "sql_file": null,
      "calculation_summary": "Retention % = (Active users / Cohort size) \u00d7 100, pivoted by cohort_month and months_since_signup"
    },
    "chart_churn_by_plan": {
      "type": "chart",
      "chart_type": "bar",
      "title": "Churn Rate by Plan Type",
      "tooltip": "Churn rates compared across subscription tiers",
      "formula_description": "Percentage of inactive users within each plan type",
      "source_file": "src/layouts/retention_analysis.py",
      "source_function": "create_retention_analysis",
      "source_lines": "57-62",
      "sql_file": null,
      "calculation_summary": "(COUNT(WHERE is_active = 0) / COUNT(*)) \u00d7 100 GROUP BY plan_type"
    },
    "chart_churn_risk_by_health": {
      "type": "chart",
      "chart_type": "bar_stacked",
      "title": "Churn Risk by Health Tier",
      "tooltip": "Distribution of churn risk levels across health tiers",
      "formula_description": "Stacked bars showing risk tiers (Low/Medium/High) segmented by health tier (Red/Yellow/Green)",
      "source_file": "src/layouts/retention_analysis.py",
      "source_function": "create_retention_analysis",
      "source_lines": "79-88",
      "sql_file": null,
      "calculation_summary": "COUNT(*) GROUP BY churn_risk_tier, health_tier"
    },
    "chart_account_age_distribution": {
      "type": "chart",
      "chart_type": "histogram",
      "title": "Account Age Distribution",
      "tooltip": "Distribution of account ages in days",
      "formula_description": "Histogram showing how long accounts have been active",
      "source_file": "src/layouts/retention_analysis.py",
      "source_function": "create_retention_analysis",
      "source_lines": "65-70",
      "sql_file": null,
      "calculation_summary": "HISTOGRAM(account_age_days, bins=30)"
    },
    "chart_churn_drivers": {
      "type": "chart",
      "chart_type": "bar_grouped",
      "title": "Churn Drivers: Churned vs Active Users",
      "tooltip": "Comparison of key metrics between churned and active users",
      "formula_description": "Side-by-side comparison of 4 metrics (Health, NPS, Logins, Features) for churned vs active users",
      "source_file": "src/layouts/retention_analysis.py",
      "source_function": "create_retention_analysis",
      "source_lines": "110-117",
      "sql_file": null,
      "calculation_summary": "AVG(metric) GROUP BY is_active FOR metrics: health_score, nps_score, logins_30d, unique_features"
    }
  },
  "revenue_analytics": {
    "kpi_average_arr": {
      "type": "kpi",
      "title": "Average ARR",
      "tooltip": "Mean Annual Recurring Revenue per account",
      "formula_description": "Average annual revenue per user",
      "source_file": "src/layouts/revenue_analytics.py",
      "source_function": "create_revenue_analytics",
      "source_lines": "109-110",
      "sql_file": null,
      "calculation_summary": "AVG(annual_revenue)"
    },
    "kpi_arr_at_risk": {
      "type": "kpi",
      "title": "ARR at Risk",
      "tooltip": "Total revenue from accounts with Red or Yellow health status",
      "formula_description": "Sum of annual revenue from unhealthy accounts",
      "source_file": "src/layouts/revenue_analytics.py",
      "source_function": "create_revenue_analytics",
      "source_lines": "113-114",
      "sql_file": null,
      "calculation_summary": "SUM(annual_revenue WHERE health_tier IN ['Red', 'Yellow'])"
    },
    "kpi_expansion_opportunity": {
      "type": "kpi",
      "title": "Expansion Opportunity",
      "tooltip": "Revenue from healthy accounts on starter/pro plans (upsell candidates)",
      "formula_description": "ARR from Green health accounts on lower-tier plans",
      "source_file": "src/layouts/revenue_analytics.py",
      "source_function": "create_revenue_analytics",
      "source_lines": "117-118",
      "sql_file": null,
      "calculation_summary": "SUM(annual_revenue WHERE health_tier = 'Green' AND plan_type IN ['starter', 'pro'])"
    },
    "chart_avg_arr_by_plan": {
      "type": "chart",
      "chart_type": "bar",
      "title": "Average ARR per User by Plan",
      "tooltip": "Mean revenue per customer within each subscription tier",
      "formula_description": "Average annual revenue grouped by plan type",
      "source_file": "src/layouts/revenue_analytics.py",
      "source_function": "create_revenue_analytics",
      "source_lines": "32-38",
      "sql_file": null,
      "calculation_summary": "AVG(annual_revenue) GROUP BY plan_type"
    },
    "chart_portfolio_vs_arr": {
      "type": "chart",
      "chart_type": "scatter",
      "title": "Portfolio Size vs ARR",
      "tooltip": "Relationship between portfolio size and annual revenue, colored by plan type",
      "formula_description": "Scatter plot showing correlation between properties managed and revenue",
      "source_file": "src/layouts/revenue_analytics.py",
      "source_function": "create_revenue_analytics",
      "source_lines": "41-49",
      "sql_file": null,
      "calculation_summary": "X: portfolio_size, Y: annual_revenue, Color: plan_type, Size: health_score"
    },
    "chart_arr_at_risk_pie": {
      "type": "chart",
      "chart_type": "pie",
      "title": "ARR at Risk by Health Tier",
      "tooltip": "Revenue distribution between Red and Yellow health tiers",
      "formula_description": "Pie chart showing at-risk revenue segmented by health tier",
      "source_file": "src/layouts/revenue_analytics.py",
      "source_function": "create_revenue_analytics",
      "source_lines": "53-61",
      "sql_file": null,
      "calculation_summary": "SUM(annual_revenue) WHERE health_tier IN ['Red', 'Yellow'] GROUP BY health_tier"
    },
    "chart_arr_distribution": {
      "type": "chart",
      "chart_type": "histogram",
      "title": "ARR Distribution",
      "tooltip": "Distribution of customers across revenue ranges",
      "formula_description": "Customer count in ARR buckets: <$1K, $1-5K, $5-10K, $10-25K, $25-50K, $50-100K, >$100K",
      "source_file": "src/layouts/revenue_analytics.py",
      "source_function": "create_revenue_analytics",
      "source_lines": "72-77",
      "sql_file": null,
      "calculation_summary": "COUNT(*) GROUP BY ARR_bucket, colored by plan_type"
    },
    "chart_revenue_per_property": {
      "type": "chart",
      "chart_type": "box",
      "title": "Revenue per Property by Plan Type",
      "tooltip": "Distribution of revenue efficiency (ARR/portfolio size) by plan",
      "formula_description": "Box plot showing revenue per property managed, grouped by plan type",
      "source_file": "src/layouts/revenue_analytics.py",
      "source_function": "create_revenue_analytics",
      "source_lines": "81-89",
      "sql_file": null,
      "calculation_summary": "annual_revenue / portfolio_size GROUP BY plan_type"
    },
    "table_expansion_opportunities": {
      "type": "table",
      "title": "Top 10 Expansion Opportunities",
      "tooltip": "High-value accounts with Green health on starter/pro plans (upsell targets)",
      "formula_description": "Healthy accounts on lower tiers, sorted by revenue",
      "source_file": "src/layouts/revenue_analytics.py",
      "source_function": "create_revenue_analytics",
      "source_lines": "92-96",
      "sql_file": null,
      "calculation_summary": "WHERE health_tier = 'Green' AND plan_type IN ['starter', 'pro'] ORDER BY annual_revenue DESC LIMIT 10"
    },
    "kpi_total_arr_revenue": {
      "type": "kpi",
      "title": "Total ARR Calculation (Revenue Page)",
      "tooltip": "Total Annual Recurring Revenue across all accounts",
      "formula_description": "Sum of annual revenue from all users",
      "source_file": "src/layouts/revenue_analytics.py",
      "source_function": "create_revenue_analytics",
      "source_lines": "105-106",
      "sql_file": null,
      "calculation_summary": "SUM(annual_revenue)"
    },
    "chart_arr_by_plan_revenue": {
      "type": "chart",
      "chart_type": "bar",
      "title": "ARR by Plan Type (Revenue Page)",
      "tooltip": "Total Annual Recurring Revenue broken down by subscription tier",
      "formula_description": "Sum of annual revenue grouped by plan type",
      "source_file": "src/layouts/revenue_analytics.py",
      "source_function": "create_revenue_analytics",
      "source_lines": "21-29",
      "sql_file": null,
      "calculation_summary": "SUM(annual_revenue) GROUP BY plan_type"
    }
  },
  "csm_workload": {
    "kpi_active_csms": {
      "type": "kpi",
      "title": "Active CSMs",
      "tooltip": "Number of Customer Success Managers with assigned accounts",
      "formula_description": "Count of unique CSM IDs with account assignments",
      "source_file": "src/layouts/csm_workload.py",
      "source_function": "create_csm_workload",
      "source_lines": "140-141",
      "sql_file": null,
      "calculation_summary": "COUNT(DISTINCT csm_id) WHERE success_manager_assigned = 1"
    },
    "kpi_avg_accounts_per_csm": {
      "type": "kpi",
      "title": "Average Accounts per CSM",
      "tooltip": "Mean number of accounts managed by each CSM",
      "formula_description": "Average account count per Customer Success Manager",
      "source_file": "src/layouts/csm_workload.py",
      "source_function": "create_csm_workload",
      "source_lines": "144-145",
      "sql_file": null,
      "calculation_summary": "AVG(COUNT(*) GROUP BY csm_id)"
    },
    "kpi_avg_arr_per_csm": {
      "type": "kpi",
      "title": "Average ARR per CSM",
      "tooltip": "Mean total ARR managed by each CSM",
      "formula_description": "Average total annual revenue under each CSM's management",
      "source_file": "src/layouts/csm_workload.py",
      "source_function": "create_csm_workload",
      "source_lines": "148-149",
      "sql_file": null,
      "calculation_summary": "AVG(SUM(annual_revenue) GROUP BY csm_id)"
    },
    "kpi_high_value_unassigned": {
      "type": "kpi",
      "title": "High-Value Accounts Without CSM",
      "tooltip": "Number of above-median revenue accounts without assigned CSM",
      "formula_description": "Count of unassigned accounts with ARR above median",
      "source_file": "src/layouts/csm_workload.py",
      "source_function": "create_csm_workload",
      "source_lines": "152-153",
      "sql_file": null,
      "calculation_summary": "COUNT(*) WHERE success_manager_assigned = 0 AND annual_revenue > MEDIAN(annual_revenue)"
    },
    "chart_accounts_per_csm": {
      "type": "chart",
      "chart_type": "bar",
      "title": "Accounts per CSM",
      "tooltip": "Number of accounts assigned to each Customer Success Manager",
      "formula_description": "Account count grouped by CSM, colored by workload",
      "source_file": "src/layouts/csm_workload.py",
      "source_function": "create_csm_workload",
      "source_lines": "35-41",
      "sql_file": null,
      "calculation_summary": "COUNT(*) GROUP BY csm_id ORDER BY count DESC"
    },
    "chart_arr_per_csm": {
      "type": "chart",
      "chart_type": "bar",
      "title": "Total ARR per CSM",
      "tooltip": "Total Annual Recurring Revenue managed by each CSM",
      "formula_description": "Sum of annual revenue grouped by CSM",
      "source_file": "src/layouts/csm_workload.py",
      "source_function": "create_csm_workload",
      "source_lines": "44-51",
      "sql_file": null,
      "calculation_summary": "SUM(annual_revenue) GROUP BY csm_id ORDER BY total_arr DESC"
    },
    "chart_health_by_csm": {
      "type": "chart",
      "chart_type": "bar",
      "title": "Average Health Score by CSM",
      "tooltip": "Mean health score of accounts managed by each CSM",
      "formula_description": "Average health score grouped by CSM, indicating manager effectiveness",
      "source_file": "src/layouts/csm_workload.py",
      "source_function": "create_csm_workload",
      "source_lines": "54-60",
      "sql_file": null,
      "calculation_summary": "AVG(health_score) GROUP BY csm_id"
    },
    "chart_at_risk_by_csm": {
      "type": "chart",
      "chart_type": "bar_grouped",
      "title": "At-Risk Accounts by CSM",
      "tooltip": "Renewal risk and red health accounts per CSM",
      "formula_description": "Grouped bars showing at-risk and unhealthy account counts per manager",
      "source_file": "src/layouts/csm_workload.py",
      "source_function": "create_csm_workload",
      "source_lines": "69-80",
      "sql_file": null,
      "calculation_summary": "COUNT(WHERE at_renewal_risk = 1), COUNT(WHERE health_tier = 'Red') GROUP BY csm_id"
    },
    "chart_account_mix_by_csm": {
      "type": "chart",
      "chart_type": "bar_stacked",
      "title": "Account Mix by CSM",
      "tooltip": "Distribution of plan types for each CSM's portfolio",
      "formula_description": "Stacked bars showing plan type composition per CSM",
      "source_file": "src/layouts/csm_workload.py",
      "source_function": "create_csm_workload",
      "source_lines": "84-90",
      "sql_file": null,
      "calculation_summary": "COUNT(*) GROUP BY csm_id, plan_type"
    },
    "table_csm_performance": {
      "type": "table",
      "title": "CSM Performance Summary",
      "tooltip": "Comprehensive metrics for each Customer Success Manager",
      "formula_description": "Aggregated table showing accounts, ARR, health, NPS, risk, and support metrics per CSM",
      "source_file": "src/layouts/csm_workload.py",
      "source_function": "create_csm_workload",
      "source_lines": "104-127",
      "sql_file": null,
      "calculation_summary": "Aggregated: COUNT(*), SUM(arr), AVG(arr, health, nps), COUNT(at_risk), SUM(tickets) GROUP BY csm_id"
    }
  },
  "raw_data": {
    "kpi_total_users": {
      "type": "kpi",
      "title": "Total Users",
      "tooltip": "Total number of user records in the system",
      "formula_description": "Count of all user rows",
      "source_file": "src/layouts/raw_data.py",
      "source_function": "create_raw_data_view",
      "source_lines": "174-175",
      "sql_file": null,
      "calculation_summary": "COUNT(*) FROM users"
    },
    "kpi_total_events": {
      "type": "kpi",
      "title": "Total Events",
      "tooltip": "Total number of event records in the system",
      "formula_description": "Count of all event rows",
      "source_file": "src/layouts/raw_data.py",
      "source_function": "create_raw_data_view",
      "source_lines": "178-179",
      "sql_file": null,
      "calculation_summary": "COUNT(*) FROM events"
    },
    "kpi_user_attributes": {
      "type": "kpi",
      "title": "User Attributes",
      "tooltip": "Number of available columns in the users table",
      "formula_description": "Count of user table columns",
      "source_file": "src/layouts/raw_data.py",
      "source_function": "create_raw_data_view",
      "source_lines": "182-183",
      "sql_file": null,
      "calculation_summary": "COUNT(columns) FROM users_table"
    },
    "kpi_event_types": {
      "type": "kpi",
      "title": "Event Types",
      "tooltip": "Number of unique event types in the system",
      "formula_description": "Count of distinct event_type values",
      "source_file": "src/layouts/raw_data.py",
      "source_function": "create_raw_data_view",
      "source_lines": "186-188",
      "sql_file": null,
      "calculation_summary": "COUNT(DISTINCT event_type) FROM events"
    },
    "table_users": {
      "type": "table",
      "title": "Users Table",
      "tooltip": "Complete user data with all attributes, sortable and exportable",
      "formula_description": "Full users table with filtering, sorting, and CSV export",
      "source_file": "src/layouts/raw_data.py",
      "source_function": "create_raw_data_view",
      "source_lines": "51-112",
      "sql_file": null,
      "calculation_summary": "SELECT * FROM users"
    },
    "table_events": {
      "type": "table",
      "title": "Events Table",
      "tooltip": "Complete event log with timestamps, sortable and exportable",
      "formula_description": "Full events table with filtering, sorting, and CSV export",
      "source_file": "src/layouts/raw_data.py",
      "source_function": "create_raw_data_view",
      "source_lines": "115-165",
      "sql_file": null,
      "calculation_summary": "SELECT * FROM events ORDER BY event_ts DESC"
    }
  },
  "_template": {
    "component_id": {
      "type": "kpi|chart|table",
      "chart_type": "pie|bar|histogram|scatter|line|etc",
      "title": "Display title",
      "tooltip": "Brief hover text",
      "formula_description": "Human-readable explanation",
      "source_file": "path/to/source.py",
      "source_function": "function_name",
      "source_lines": "start-end or single_line",
      "sql_file": "path/to/query.sql",
      "sql_lines": "start-end",
      "calculation_summary": "SQL-like pseudocode"
    }
  }
}